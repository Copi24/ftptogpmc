name: FTP to Google Photos Transfer

on:
  workflow_dispatch:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches:
      - main

env:
  PYTHONUNBUFFERED: 1

jobs:
  transfer:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours max
    
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048        # Keep 2GB for system
          swap-size-mb: 1024           # 1GB swap
          remove-dotnet: 'true'        # Remove .NET (~10GB)
          remove-android: 'true'       # Remove Android SDK (~8GB)
          remove-haskell: 'true'       # Remove Haskell (~5GB)
          remove-codeql: 'true'        # Remove CodeQL (~2GB)
          remove-docker-images: 'true' # Remove Docker images (~5GB)
          temp-reserve-mb: 100         # Keep minimal on temp disk
          build-mount-path: '/workspace'
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: 'repo'
      
      - name: Download previous state (if exists)
        uses: actions/download-artifact@v4
        continue-on-error: true
        id: download-state
        with:
          name: upload-state
          path: repo/
        env:
          ACTIONS_ALLOW_UNSUPPORTED_RUNTIME: true
      
      - name: Check state file
        run: |
          if [ -f "repo/upload_state.json" ]; then
            echo "✅ State file found"
            echo "State file size: $(wc -c < repo/upload_state.json) bytes"
            if command -v jq >/dev/null 2>&1; then
              echo "Completed files: $(jq '.completed | length' repo/upload_state.json 2>/dev/null || echo 0)"
            else
              echo "Completed files: (jq not installed, cannot count)"
            fi
          else
            echo "⚠️ State file NOT found (this is normal on first run)"
            echo "⚠️ A new state file will be created after the first upload"
          fi
        working-directory: .
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install rclone
        run: |
          curl https://rclone.org/install.sh | sudo bash
          rclone version
      
      - name: Configure rclone
        run: |
          mkdir -p ~/.config/rclone
          echo "${{ secrets.RCLONE_CONFIG }}" > ~/.config/rclone/rclone.conf
          chmod 600 ~/.config/rclone/rclone.conf
          echo "Rclone config created"
      
      - name: Test rclone connection
        run: |
          rclone lsd Challenger: || echo "Warning: Could not list directories"
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg p7zip-full
      
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install https://github.com/xob0t/google_photos_mobile_client/archive/refs/heads/main.zip --force-reinstall
          pip install requests
      
      - name: Run transfer script
        env:
          GP_AUTH_DATA: ${{ secrets.GP_AUTH_DATA }}
        working-directory: repo
        run: |
          python3 ftp_to_gphotos.py
        continue-on-error: true
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: transfer-logs
          path: |
            repo/ftp_to_gphotos.log
          retention-days: 7
      
      - name: Upload state for next run
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: upload-state
          path: repo/upload_state.json
          retention-days: 90
          overwrite: true
      
      - name: Check disk space
        if: always()
        run: |
          df -h
          du -sh ~/* 2>/dev/null || true

